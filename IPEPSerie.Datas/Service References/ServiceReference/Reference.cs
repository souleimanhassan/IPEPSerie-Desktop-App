//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IPEPSerie.Datas.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPEPSResultType", Namespace="http://schemas.datacontract.org/2004/07/IPEPSerie.WCF")]
    public enum IPEPSResultType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPEPSResult", Namespace="http://schemas.datacontract.org/2004/07/IPEPSerie.WCF")]
    [System.SerializableAttribute()]
    public partial class IPEPSResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IPEPSerie.Datas.ServiceReference.IPEPSResultType ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorReason {
            get {
                return this.ErrorReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorReasonField, value) != true)) {
                    this.ErrorReasonField = value;
                    this.RaisePropertyChanged("ErrorReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IPEPSerie.Datas.ServiceReference.IPEPSResultType Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IIPEPSerieService")]
    public interface IIPEPSerieService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPEPSerieService/HelloIPEPS", ReplyAction="http://tempuri.org/IIPEPSerieService/HelloIPEPSResponse")]
        string HelloIPEPS();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPEPSerieService/HelloIPEPS", ReplyAction="http://tempuri.org/IIPEPSerieService/HelloIPEPSResponse")]
        System.Threading.Tasks.Task<string> HelloIPEPSAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPEPSerieService/GetResultExample", ReplyAction="http://tempuri.org/IIPEPSerieService/GetResultExampleResponse")]
        IPEPSerie.Datas.ServiceReference.IPEPSResult GetResultExample(IPEPSerie.Datas.ServiceReference.IPEPSResultType resulType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPEPSerieService/GetResultExample", ReplyAction="http://tempuri.org/IIPEPSerieService/GetResultExampleResponse")]
        System.Threading.Tasks.Task<IPEPSerie.Datas.ServiceReference.IPEPSResult> GetResultExampleAsync(IPEPSerie.Datas.ServiceReference.IPEPSResultType resulType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIPEPSerieServiceChannel : IPEPSerie.Datas.ServiceReference.IIPEPSerieService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IPEPSerieServiceClient : System.ServiceModel.ClientBase<IPEPSerie.Datas.ServiceReference.IIPEPSerieService>, IPEPSerie.Datas.ServiceReference.IIPEPSerieService {
        
        public IPEPSerieServiceClient() {
        }
        
        public IPEPSerieServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IPEPSerieServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IPEPSerieServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IPEPSerieServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloIPEPS() {
            return base.Channel.HelloIPEPS();
        }
        
        public System.Threading.Tasks.Task<string> HelloIPEPSAsync() {
            return base.Channel.HelloIPEPSAsync();
        }
        
        public IPEPSerie.Datas.ServiceReference.IPEPSResult GetResultExample(IPEPSerie.Datas.ServiceReference.IPEPSResultType resulType) {
            return base.Channel.GetResultExample(resulType);
        }
        
        public System.Threading.Tasks.Task<IPEPSerie.Datas.ServiceReference.IPEPSResult> GetResultExampleAsync(IPEPSerie.Datas.ServiceReference.IPEPSResultType resulType) {
            return base.Channel.GetResultExampleAsync(resulType);
        }
    }
}
